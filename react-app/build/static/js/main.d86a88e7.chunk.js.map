{"version":3,"sources":["utils.js","FilterBar.js","FilterModal.js","Stars.js","Interested.js","PropertyCard.js","NoProperty.js","App.js","index.js"],"names":["base_path","FilterBar","props","className","currentFilter","gender","src","alt","currentSort","onClick","updateSort","FilterModal","id","tabIndex","role","type","updateFilter","Stars","star","stars","i","rating","push","title","Interested","heart_image_class","is_interested","toggleInterested","user_count","PropertyCard","gender_image","total_rating","parseFloat","property","rating_clean","rating_food","rating_safety","Math","round","toFixed","rent","Intl","NumberFormat","format","image","interested_users_count","name","address","href","NoProperty","App","state","properties","sort","filter","property_id","fetch","then","response","json","responseData","success","console","log","updateInterested","is_logged_in","window","$","modal","catch","error","updated_properties","forEach","setState","search","location","city_name","URLSearchParams","get","property_cards","this","a","b","length","map","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d86a88e7.chunk.js","sourcesContent":["// For development use this:\n//export const base_path = \"http://127.0.0.1/pglife_steps\";\n\n// For production use this:\nexport const base_path = \".\";","import React from 'react';\nimport { base_path } from './utils.js';\n\nconst FilterBar = props => {\n  return (\n    <div className=\"filter-bar row justify-content-around\">\n      <div className={\"col-auto\" + (props.currentFilter.gender !== \"none\" ? \" sort-active\" : \"\")} data-toggle=\"modal\" data-target=\"#filter-modal\">\n        <img src={base_path + \"/img/filter.png\"} alt=\"filter\" />\n        <span>Filter</span>\n      </div>\n      <div className={\"col-auto\" + (props.currentSort === \"desc\" ? \" sort-active\" : \"\")} onClick={() => props.updateSort(\"desc\")}>\n        <img src={base_path + \"/img/desc.png\"} alt=\"sort-desc\" />\n        <span>Highest rent first</span>\n      </div>\n      <div className={\"col-auto\" + (props.currentSort === \"asc\" ? \" sort-active\" : \"\")} onClick={() => props.updateSort(\"asc\")}>\n        <img src={base_path + \"/img/asc.png\"} alt=\"sort-asc\" />\n        <span>Lowest rent first</span>\n      </div>\n    </div>\n  );\n}\n\nexport default FilterBar;\n","import React from 'react';\n\nconst FilterModal = props => {\n  return (\n    <div className=\"modal fade\" id=\"filter-modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"filter-heading\" aria-hidden=\"true\">\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h3 className=\"modal-title\" id=\"filter-heading\">Filters</h3>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n\n          <div className=\"modal-body\">\n            <h5>Gender</h5>\n            <hr />\n            <div>\n              <button className={\"btn btn-outline-dark\" + (props.currentFilter.gender===\"none\" ? \" btn-active\" : \"\")} onClick={() => props.updateFilter(\"none\")}>\n                No Filter\n              </button>\n              <button className={\"btn btn-outline-dark\" + (props.currentFilter.gender===\"unisex\" ? \" btn-active\" : \"\")} onClick={() => props.updateFilter(\"unisex\")}>\n                <i className=\"fas fa-venus-mars\"></i>Unisex\n              </button>\n              <button className={\"btn btn-outline-dark\" + (props.currentFilter.gender===\"male\" ? \" btn-active\" : \"\")} onClick={() => props.updateFilter(\"male\")}>\n                <i className=\"fas fa-mars\"></i>Male\n              </button>\n              <button className={\"btn btn-outline-dark\" + (props.currentFilter.gender===\"female\" ? \" btn-active\" : \"\")} onClick={() => props.updateFilter(\"female\")}>\n                <i className=\"fas fa-venus\"></i>Female\n              </button>\n            </div>\n          </div>\n\n          <div className=\"modal-footer\">\n            <button data-dismiss=\"modal\" className=\"btn btn-success\">Okay</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FilterModal;\n","import React from 'react';\n\nconst Stars = props => {\n\n  let stars = [];\n  let star;\n  for (let i = 0; i < 5; i++) {\n    if (props.rating >= i + 0.8) {\n      star = <i className=\"fas fa-star\" key={i}></i>;\n    } else if (props.rating >= i + 0.3) {\n      star = <i className=\"fas fa-star-half-alt\" key={i}></i>;\n    } else {\n      star = <i className=\"far fa-star\" key={i}></i>;\n    }\n\n    stars.push(star);\n  }\n\n  return (\n    <div className=\"star-container\" title={props.rating}>\n      {stars}\n    </div>\n  );\n}\n\nexport default Stars;\n","import React from 'react';\n\nconst Interested = props => {\n\n  let heart_image_class;\n  if (props.is_interested) {\n    heart_image_class = \"fas\";\n  } else {\n    heart_image_class = \"far\";\n  }\n\n  return (\n    <div className=\"interested-container\">\n      <i\n        className={`is-interested-image ${heart_image_class} fa-heart`}\n        onClick={() => props.toggleInterested()}\n      ></i>\n      <div className=\"interested-text\">\n        <span className=\"interested-user-count\">{props.user_count}</span> interested\n      </div>\n    </div>\n  );\n}\n\nexport default Interested;\n","import React from 'react';\nimport Stars from './Stars';\nimport Interested from './Interested';\nimport { base_path } from './utils.js';\n\nconst PropertyCard = props => {\n\n  let total_rating = (parseFloat(props.property.rating_clean) + parseFloat(props.property.rating_food) + parseFloat(props.property.rating_safety)) / 3;\n  total_rating = Math.round(total_rating * 10) / 10;\n  total_rating = total_rating.toFixed(1);\n\n  let gender_image;\n  if (props.property.gender === \"male\") {\n    gender_image = <img src={base_path + \"/img/male.png\"} alt=\"male\" />;\n  } else if (props.property.gender === \"female\") {\n    gender_image = <img src={base_path + \"/img/female.png\"} alt=\"female\" />;\n  } else {\n    gender_image = <img src={base_path + \"/img/unisex.png\"} alt=\"unisex\" />;\n  }\n\n  let rent = new Intl.NumberFormat().format(props.property.rent);\n\n  return (\n    <div className={`property-card property-id-${props.property.id} row`}>\n      <div className=\"image-container col-md-4\">\n        <img src={base_path + \"/\" + props.property.image} alt=\"property\" />\n      </div>\n\n      <div className=\"content-container col-md-8\">\n        <div className=\"row no-gutters justify-content-between\">\n          <Stars rating={total_rating} />\n\n          <Interested\n            is_interested={props.property.is_interested}\n            toggleInterested={props.toggleInterested}\n            user_count={props.property.interested_users_count}\n          />\n        </div>\n\n        <div className=\"detail-container\">\n          <div className=\"property-name\">{props.property.name}</div>\n          <div className=\"property-address\">{props.property.address}</div>\n          <div className=\"property-gender\">\n            {gender_image}\n          </div>\n        </div>\n\n        <div className=\"row no-gutters\">\n          <div className=\"rent-container col-6\">\n            <div className=\"rent\">₹ {rent}/-</div>\n            <div className=\"rent-unit\">per month</div>\n          </div>\n          <div className=\"button-container col-6\">\n            <a href={\"property_detail.php?property_id=\" + props.property.id} className=\"btn btn-primary\">View</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PropertyCard;\n","import React from 'react';\n\nconst NoProperty = () => {\n\n  return (\n    <div className=\"no-property-container\">\n      <p>No PG to list</p>\n    </div>\n  );\n}\n\nexport default NoProperty;\n","import React, { Component } from 'react';\nimport FilterBar from './FilterBar';\nimport FilterModal from './FilterModal';\nimport PropertyCard from './PropertyCard';\nimport NoProperty from './NoProperty';\nimport { base_path } from './utils.js';\n\nclass App extends Component {\n\n  state = {\n    properties: [],\n    sort: \"none\",\n    filter: {\n      gender: \"none\"\n    }\n  };\n\n  componentDidMount() {\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    const city_name = params.get('city');\n\n    fetch(`${base_path}/api/get_properties_by_city.php?city=${city_name}`)\n      .then(response => response.json())\n      .then(responseData => {\n        this.setState({\n          properties: responseData\n        });\n      })\n      .catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n  }\n\n  toggleInterested = property_id => {\n    fetch(`${base_path}/api/toggle_interested.php?property_id=${property_id}`)\n      .then(response => response.json())\n      .then(responseData => {\n        if (responseData.success) {\n          console.log('Success');\n          this.updateInterested(property_id);\n        } else if (!responseData.success && !responseData.is_logged_in) {\n          console.log('Not logged in!');\n          window.$(\"#login-modal\").modal(\"show\");\n        }\n      })\n      .catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n  }\n\n  updateInterested = property_id => {\n    let updated_properties = [...this.state.properties];\n    updated_properties.forEach((property) => {\n      if (property.id === property_id) {\n        property.is_interested = !property.is_interested;\n        if (property.is_interested) {\n          property.interested_users_count++;\n        } else {\n          property.interested_users_count--;\n        }\n      }\n    });\n\n    this.setState({\n      properties: updated_properties\n    });\n  }\n\n  updateSort = sort => {\n    this.setState({\n      sort: sort\n    });\n  }\n\n  updateFilter = gender => {\n    this.setState({\n      filter: {\n        gender: gender\n      }\n    });\n  }\n\n  render() {\n    let properties = [...this.state.properties];\n\n    // Sorting\n    if (this.state.sort !== \"none\") {\n      if (this.state.sort === \"desc\") {\n        properties.sort((a, b) => b.rent - a.rent);\n      } else {\n        properties.sort((a, b) => a.rent - b.rent);\n      }\n    }\n\n    // Filter\n    if (this.state.filter.gender !== \"none\") {\n      properties = properties.filter(property =>\n        property.gender === this.state.filter.gender\n      );\n    }\n\n    let property_cards;\n    if (properties.length > 0) {\n      property_cards = properties.map(property =>\n        <PropertyCard\n          key={property.id}\n          property={property}\n          toggleInterested={() => this.toggleInterested(property.id)}\n        />\n      );\n    } else {\n      property_cards = <NoProperty />;\n    }\n\n\n    return (\n      <>\n        <div className=\"page-container\">\n          <FilterBar\n            currentSort={this.state.sort}\n            updateSort={this.updateSort}\n            currentFilter={this.state.filter}\n          />\n\n          {property_cards}\n        </div>\n\n        <FilterModal\n          currentFilter={this.state.filter}\n          updateFilter={this.updateFilter}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}